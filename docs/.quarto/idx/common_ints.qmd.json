{"title":"Clojure: Common Integers","markdown":{"yaml":{"format":{"html":{"toc":true,"toc-depth":3,"theme":"united","number-sections":false,"output-file":"common_ints.html"}},"code-block-background":true,"highlight-style":"atom-one"},"headingText":"Clojure: Common Integers","containsRefs":false,"markdown":"\n<style></style><style>.printedClojure .sourceCode {\n  background-color: transparent;\n  border-style: none;\n}\n</style><style>.clay-limit-image-width .clay-image {max-width: 100%}\n.clay-side-by-side .sourceCode {margin: 0}\n.clay-side-by-side {margin: 1em 0}\n</style>\n<script src=\"common_ints_files/md-default0.js\" type=\"text/javascript\"></script><script src=\"common_ints_files/md-default1.js\" type=\"text/javascript\"></script>\n\n::: {.sourceClojure}\n```clojure\n(ns common-ints)\n```\n:::\n\n\n\n\nThis implementation addresses the intersection of sequences where element frequency matters. Standard set operations discard duplicates, but many applications require preserving the count of repeated elements. When intersecting `[1 1 2]` with `[1 1 1 2]`, we maintain two `1`s since that's their shared frequency.\n\nThe implementation leverages `Clojure`'s *functional programming* capabilities through the `->>` threading macro. It processes element frequencies using `frequencies` for counting and `group-by` for organizing elements. The core logic uses `mapcat` with `repeat` to generate the correct number of repeated elements based on minimum frequencies between sequences.\n\nFor handling multiple sequences, it employs `reduce` to cascade the two-sequence intersection operation. This mirrors the mathematical definition of n-way intersection while maintaining the frequency preservation property across all inputs.\n\n\n::: {.sourceClojure}\n```clojure\n(defn intersection\n  \"Return an array that is the intersection of the input arrays\"\n  ([s1] (vec s1))\n  ([s1 s2]\n   (let [freq2 (frequencies s2)]\n     (->> s1\n          (filter #(contains? freq2 %))\n          (group-by identity)\n          (mapcat (fn [[k v]]\n                   (repeat (min (count v) (freq2 k)) k)))\n          vec)))\n  ([s1 s2 & sets]\n   (reduce intersection (intersection s1 s2) sets)))\n```\n:::\n\n\nExamples demonstrating frequency-preserving intersection:\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 1 2 3] [1 2 3 4])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[1 2 3]\n\n```\n:::\n\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 2 3] [2 3 4] [3 4 5])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[3]\n\n```\n:::\n\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 1 2] [1 1 1 2])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[1 1 2]\n\n```\n:::\n\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 1 2 3] [1 2 3] [1 3])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[1 3]\n\n```\n:::\n\n\n\n```{=html}\n<div style=\"background-color:grey;height:2px;width:100%;\"></div>\n```\n\n\n\n```{=html}\n<div></div>\n```\n","srcMarkdownNoYaml":"\n<style></style><style>.printedClojure .sourceCode {\n  background-color: transparent;\n  border-style: none;\n}\n</style><style>.clay-limit-image-width .clay-image {max-width: 100%}\n.clay-side-by-side .sourceCode {margin: 0}\n.clay-side-by-side {margin: 1em 0}\n</style>\n<script src=\"common_ints_files/md-default0.js\" type=\"text/javascript\"></script><script src=\"common_ints_files/md-default1.js\" type=\"text/javascript\"></script>\n\n::: {.sourceClojure}\n```clojure\n(ns common-ints)\n```\n:::\n\n\n\n# Clojure: Common Integers\n\nThis implementation addresses the intersection of sequences where element frequency matters. Standard set operations discard duplicates, but many applications require preserving the count of repeated elements. When intersecting `[1 1 2]` with `[1 1 1 2]`, we maintain two `1`s since that's their shared frequency.\n\nThe implementation leverages `Clojure`'s *functional programming* capabilities through the `->>` threading macro. It processes element frequencies using `frequencies` for counting and `group-by` for organizing elements. The core logic uses `mapcat` with `repeat` to generate the correct number of repeated elements based on minimum frequencies between sequences.\n\nFor handling multiple sequences, it employs `reduce` to cascade the two-sequence intersection operation. This mirrors the mathematical definition of n-way intersection while maintaining the frequency preservation property across all inputs.\n\n\n::: {.sourceClojure}\n```clojure\n(defn intersection\n  \"Return an array that is the intersection of the input arrays\"\n  ([s1] (vec s1))\n  ([s1 s2]\n   (let [freq2 (frequencies s2)]\n     (->> s1\n          (filter #(contains? freq2 %))\n          (group-by identity)\n          (mapcat (fn [[k v]]\n                   (repeat (min (count v) (freq2 k)) k)))\n          vec)))\n  ([s1 s2 & sets]\n   (reduce intersection (intersection s1 s2) sets)))\n```\n:::\n\n\nExamples demonstrating frequency-preserving intersection:\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 1 2 3] [1 2 3 4])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[1 2 3]\n\n```\n:::\n\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 2 3] [2 3 4] [3 4 5])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[3]\n\n```\n:::\n\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 1 2] [1 1 1 2])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[1 1 2]\n\n```\n:::\n\n\n\n::: {.sourceClojure}\n```clojure\n(intersection [1 1 2 3] [1 2 3] [1 3])\n```\n:::\n\n\n\n::: {.printedClojure}\n```clojure\n[1 3]\n\n```\n:::\n\n\n\n```{=html}\n<div style=\"background-color:grey;height:2px;width:100%;\"></div>\n```\n\n\n\n```{=html}\n<div></div>\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"number-sections":false,"highlight-style":"atom-one","output-file":"common_ints.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"united","code-block-background":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","revealjs"]}